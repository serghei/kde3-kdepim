# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = korn$(EXEEXT)
subdir = korn
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in AUTHORS ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(xdg_appsdir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_korn_OBJECTS = accountmanager.$(OBJEXT) account_input.$(OBJEXT) \
	boxcontainer.$(OBJEXT) boxcontaineritem.$(OBJEXT) \
	dcopdrop.$(OBJEXT) dcopdropif.$(OBJEXT) dcop_proto.$(OBJEXT) \
	dockedcontainer.$(OBJEXT) dockeditem.$(OBJEXT) \
	hvcontainer.$(OBJEXT) hvitem.$(OBJEXT) \
	keditlistboxman.$(OBJEXT) nntp_proto.$(OBJEXT) \
	maildrop.$(OBJEXT) main.$(OBJEXT) polldrop.$(OBJEXT) \
	protocols.$(OBJEXT) kornshell.$(OBJEXT) subjectsdlg.$(OBJEXT) \
	maildlg.$(OBJEXT) mailid.$(OBJEXT) mailsubject.$(OBJEXT) \
	mbox_proto.$(OBJEXT) imap_proto.$(OBJEXT) intid.$(OBJEXT) \
	stringid.$(OBJEXT) kornapp.$(OBJEXT) kio.$(OBJEXT) \
	kio_count.$(OBJEXT) kio_proto.$(OBJEXT) kio_subjects.$(OBJEXT) \
	kio_single_subject.$(OBJEXT) kio_read.$(OBJEXT) \
	kio_delete.$(OBJEXT) kmail_proto.$(OBJEXT) \
	sortedmailsubject.$(OBJEXT) korncfgimpl.$(OBJEXT) \
	kornaccountcfgimpl.$(OBJEXT) kornboxcfgimpl.$(OBJEXT) \
	password.$(OBJEXT) pop3_proto.$(OBJEXT) systemtray.$(OBJEXT) \
	process_proto.$(OBJEXT) qmail_proto.$(OBJEXT)
#>- korn_OBJECTS = $(am_korn_OBJECTS)
#>+ 22
korn_final_OBJECTS = korn.all_cpp.o 
korn_nofinal_OBJECTS = accountmanager.$(OBJEXT) account_input.$(OBJEXT) \
	boxcontainer.$(OBJEXT) boxcontaineritem.$(OBJEXT) \
	dcopdrop.$(OBJEXT) dcopdropif.$(OBJEXT) dcop_proto.$(OBJEXT) \
	dockedcontainer.$(OBJEXT) dockeditem.$(OBJEXT) \
	hvcontainer.$(OBJEXT) hvitem.$(OBJEXT) \
	keditlistboxman.$(OBJEXT) nntp_proto.$(OBJEXT) \
	maildrop.$(OBJEXT) main.$(OBJEXT) polldrop.$(OBJEXT) \
	protocols.$(OBJEXT) kornshell.$(OBJEXT) subjectsdlg.$(OBJEXT) \
	maildlg.$(OBJEXT) mailid.$(OBJEXT) mailsubject.$(OBJEXT) \
	mbox_proto.$(OBJEXT) imap_proto.$(OBJEXT) intid.$(OBJEXT) \
	stringid.$(OBJEXT) kornapp.$(OBJEXT) kio.$(OBJEXT) \
	kio_count.$(OBJEXT) kio_proto.$(OBJEXT) kio_subjects.$(OBJEXT) \
	kio_single_subject.$(OBJEXT) kio_read.$(OBJEXT) \
	kio_delete.$(OBJEXT) kmail_proto.$(OBJEXT) \
	sortedmailsubject.$(OBJEXT) korncfgimpl.$(OBJEXT) \
	kornaccountcfgimpl.$(OBJEXT) kornboxcfgimpl.$(OBJEXT) \
	password.$(OBJEXT) pop3_proto.$(OBJEXT) systemtray.$(OBJEXT) \
	process_proto.$(OBJEXT) qmail_proto.$(OBJEXT) boxcontaineritem_skel.$(OBJEXT) dcopdropif_skel.$(OBJEXT) kornaccountcfg.$(OBJEXT) kornboxcfg.$(OBJEXT) korncfg.$(OBJEXT) progress_dialog.$(OBJEXT)\
label.moc.o 
@KDE_USE_FINAL_FALSE@korn_OBJECTS = $(korn_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@korn_OBJECTS = $(korn_final_OBJECTS)
am__DEPENDENCIES_1 =
korn_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/libkmime/libkmime.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(korn_SOURCES)
DIST_SOURCES = $(korn_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(xdg_apps_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GLIBC21 = @GLIBC21@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GMSGFMT = @GMSGFMT@
GPG = @GPG@
GPGME_CFLAGS = @GPGME_CFLAGS@
GPGME_CONFIG = @GPGME_CONFIG@
GPGME_LIBS = @GPGME_LIBS@
GPGME_LIBS_DEP = @GPGME_LIBS_DEP@
GPGSM = @GPGSM@
GPG_PATH = @GPG_PATH@
GREP = @GREP@
HAVE_BROKEN_TIMSIEVED = @HAVE_BROKEN_TIMSIEVED@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
HAVE_LOCKDEV_H = @HAVE_LOCKDEV_H@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KANDY_LIBLOCKDEV = @KANDY_LIBLOCKDEV@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXSS = @LIBXSS@
LIBZ = @LIBZ@
LIB_BLUETOOTH = @LIB_BLUETOOTH@
LIB_GNOKII = @LIB_GNOKII@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_LOCKDEV = @LIB_LOCKDEV@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MAL_INCLUDE = @MAL_INCLUDE@
MAL_LIB = @MAL_LIB@
MAL_RPATH = @MAL_RPATH@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
OPENSYNCENGINE_CFLAGS = @OPENSYNCENGINE_CFLAGS@
OPENSYNCENGINE_LIBS = @OPENSYNCENGINE_LIBS@
OPENSYNC_CFLAGS = @OPENSYNC_CFLAGS@
OPENSYNC_CONFIGDIR = @OPENSYNC_CONFIGDIR@
OPENSYNC_FORMATSDIR = @OPENSYNC_FORMATSDIR@
OPENSYNC_HEADERDIR = @OPENSYNC_HEADERDIR@
OPENSYNC_LIBS = @OPENSYNC_LIBS@
OPENSYNC_PLUGINDIR = @OPENSYNC_PLUGINDIR@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PERL_CFLAGS = @PERL_CFLAGS@
PERL_LDFLAGS = @PERL_LDFLAGS@
PISOCK_INCLUDE = @PISOCK_INCLUDE@
PISOCK_LDFLAGS = @PISOCK_LDFLAGS@
PISOCK_LIB = @PISOCK_LIB@
PKG_CONFIG = @PKG_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SASL2_LIBS = @SASL2_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
KDE_CXXFLAGS = $(USE_RTTI)
INCLUDES = -I$(top_srcdir)/libkmime \
  	$(all_includes)

#INCLUDES = -I$(top_srcdir)/mimelib -I$(top_srcdir)/libkmime $(all_includes)
AM_LDFLAGS = $(all_libraries) $(KDE_RPATH)
#>- METASOURCES = AUTO
korn_LDADD = $(LIB_KIO) $(top_builddir)/libkmime/libkmime.la
#korn_LDADD = $(top_builddir)/mimelib/libmimelib.la $(LIB_KFILE) $(LIBSOCKET) $(top_builddir)/libkmime/libkmime.la
#>- korn_SOURCES = \
#>-   accountmanager.cpp \
#>-   account_input.cpp \
#>-   boxcontainer.cpp \
#>-   boxcontaineritem.cpp boxcontaineritem.skel \
#>-   dcopdrop.cpp \
#>-   dcopdropif.cpp dcopdropif.skel \
#>-   dcop_proto.cpp \
#>-   dockedcontainer.cpp \
#>-   dockeditem.cpp \
#>-   hvcontainer.cpp \
#>-   hvitem.cpp \
#>-   keditlistboxman.cpp \
#>-   nntp_proto.cpp \
#>-   maildrop.cpp \
#>-   main.cpp \
#>-   polldrop.cpp \
#>-   protocols.cpp \
#>-   kornshell.cpp \
#>-   subjectsdlg.cpp \
#>-   maildlg.cpp \
#>-   mailid.cpp \
#>-   mailsubject.cpp \
#>-   mbox_proto.cpp \
#>-   imap_proto.cpp \
#>-   intid.cpp \
#>-   stringid.cpp \
#>-   kornapp.cpp \
#>-   kio.cpp \
#>-   kio_count.cpp \
#>-   kio_proto.cpp \
#>-   kio_subjects.cpp \
#>-   kio_single_subject.cpp \
#>-   kio_read.cpp \
#>-   kio_delete.cpp \
#>-   kmail_proto.cpp \
#>-   sortedmailsubject.cpp \
#>-   korncfgimpl.cpp \
#>-   kornaccountcfgimpl.cpp \
#>-   kornboxcfgimpl.cpp \
#>-   kornaccountcfg.ui \
#>-   kornboxcfg.ui \
#>-   korncfg.ui \
#>-   password.cpp \
#>-   pop3_proto.cpp \
#>-   systemtray.cpp \
#>-   process_proto.cpp \
#>-   progress_dialog.ui \
#>-   qmail_proto.cpp
#>+ 49
korn_SOURCES=\
  accountmanager.cpp \
  account_input.cpp \
  boxcontainer.cpp \
  boxcontaineritem.cpp  \
  dcopdrop.cpp \
  dcopdropif.cpp  \
  dcop_proto.cpp \
  dockedcontainer.cpp \
  dockeditem.cpp \
  hvcontainer.cpp \
  hvitem.cpp \
  keditlistboxman.cpp \
  nntp_proto.cpp \
  maildrop.cpp \
  main.cpp \
  polldrop.cpp \
  protocols.cpp \
  kornshell.cpp \
  subjectsdlg.cpp \
  maildlg.cpp \
  mailid.cpp \
  mailsubject.cpp \
  mbox_proto.cpp \
  imap_proto.cpp \
  intid.cpp \
  stringid.cpp \
  kornapp.cpp \
  kio.cpp \
  kio_count.cpp \
  kio_proto.cpp \
  kio_subjects.cpp \
  kio_single_subject.cpp \
  kio_read.cpp \
  kio_delete.cpp \
  kmail_proto.cpp \
  sortedmailsubject.cpp \
  korncfgimpl.cpp \
  kornaccountcfgimpl.cpp \
  kornboxcfgimpl.cpp \
   \
   \
   \
  password.cpp \
  pop3_proto.cpp \
  systemtray.cpp \
  process_proto.cpp \
   \
  qmail_proto.cpp boxcontaineritem_skel.cpp dcopdropif_skel.cpp kornaccountcfg.cpp kornboxcfg.cpp korncfg.cpp progress_dialog.cpp

noinst_HEADERS = \
  accountmanager.h \
  account_input.h \
  boxcontainer.h \
  boxcontaineritem.h \
  dcop_proto.h \
  dcopdrop.h \
  dcopdropif.h \
  dockeditem.h \
  hvcontainer.h \
  hvitem.h \
  keditlistboxman.h \
  kmail_proto.h \
  kornaccountcfgimpl.h \
  kornboxcfg.h \
  kornboxcfgimpl.h \
  korncfg.h \
  korncfgimpl.h \
  maildrop.h \
  progress_dialog.ui.h \
  protocols.h \
  kornshell.h \
  subjectsdlg.h \
  maildlg.h \
  mailid.h \
  mailsubject.h \
  mbox_proto.h \
  intid.h \
  stringid.h \
  kornapp.h \
  kio.h \
  kio_count.h \
  kio_subjects.h \
  kio_single_subject.h \
  kio_read.h \
  kio_delete.h \
  sortedmailsubject.h \
  imap_proto.h \
  imaps_proto.h \
  kio_proto.h \
  maildir_proto.h \
  nntp_proto.h \
  pop3_proto.h \
  pop3s_proto.h \
  password.h \
  process_proto.h \
  qmail_proto.h \
  systemtray.h

KDE_ICON = korn
xdg_apps_DATA = KOrn.desktop
SUBDIRS = kconf_update
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  korn/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  korn/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  korn/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  korn/Makefile
	cd $(top_srcdir) && perl admin/am_edit korn/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
korn$(EXEEXT): $(korn_OBJECTS) $(korn_DEPENDENCIES) 
	@rm -f korn$(EXEEXT)
	$(CXXLINK) $(korn_OBJECTS) $(korn_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/account_input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/accountmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boxcontainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/boxcontaineritem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dcop_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dcopdrop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dcopdropif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dockedcontainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dockeditem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hvcontainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hvitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imap_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/intid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/keditlistboxman.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kio_count.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kio_delete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kio_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kio_read.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kio_single_subject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kio_subjects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kmail_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kornaccountcfgimpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kornapp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kornboxcfgimpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/korncfgimpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kornshell.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/maildlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/maildrop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mailid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mailsubject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mbox_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nntp_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/password.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/polldrop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pop3_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/process_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/protocols.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmail_proto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sortedmailsubject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stringid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subjectsdlg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/systemtray.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(xdg_appsdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-idl clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-xdg_appsDATA
#>+ 1
install-data-am: install-kde-icons  install-xdg_appsDATA

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-xdg_appsDATA
#>+ 1
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip install-xdg_appsDATA \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-xdg_appsDATA


srcdoc:
	kdoc -p -u "/~ssk/src/korn/" -n korn -d /home/ssk/web/src/korn *.h \
		-lqt -lkdeui -lkdecore

messages: rc.cpp
	$(XGETTEXT) *.h *.cpp -o $(podir)/korn.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 9
boxcontaineritem.kidl: $(srcdir)/boxcontaineritem.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/boxcontaineritem.h > boxcontaineritem.kidl || ( rm -f boxcontaineritem.kidl ; false )
boxcontaineritem_skel.cpp: boxcontaineritem.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub boxcontaineritem.kidl
dcopdropif.kidl: $(srcdir)/dcopdropif.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/dcopdropif.h > dcopdropif.kidl || ( rm -f dcopdropif.kidl ; false )
dcopdropif_skel.cpp: dcopdropif.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub dcopdropif.kidl

#>+ 3
kornaccountcfgimpl.moc: $(srcdir)/kornaccountcfgimpl.h
	$(MOC) $(srcdir)/kornaccountcfgimpl.h -o kornaccountcfgimpl.moc

#>+ 2
mocs: kornaccountcfgimpl.moc

#>+ 3
hvitem.moc: $(srcdir)/hvitem.h
	$(MOC) $(srcdir)/hvitem.h -o hvitem.moc

#>+ 2
mocs: hvitem.moc

#>+ 3
accountmanager.moc: $(srcdir)/accountmanager.h
	$(MOC) $(srcdir)/accountmanager.h -o accountmanager.moc

#>+ 2
mocs: accountmanager.moc

#>+ 3
boxcontainer.moc: $(srcdir)/boxcontainer.h
	$(MOC) $(srcdir)/boxcontainer.h -o boxcontainer.moc

#>+ 2
mocs: boxcontainer.moc

#>+ 3
kio_read.moc: $(srcdir)/kio_read.h
	$(MOC) $(srcdir)/kio_read.h -o kio_read.moc

#>+ 2
mocs: kio_read.moc

#>+ 3
keditlistboxman.moc: $(srcdir)/keditlistboxman.h
	$(MOC) $(srcdir)/keditlistboxman.h -o keditlistboxman.moc

#>+ 2
mocs: keditlistboxman.moc

#>+ 3
subjectsdlg.moc: $(srcdir)/subjectsdlg.h
	$(MOC) $(srcdir)/subjectsdlg.h -o subjectsdlg.moc

#>+ 2
mocs: subjectsdlg.moc

#>+ 3
kio_subjects.moc: $(srcdir)/kio_subjects.h
	$(MOC) $(srcdir)/kio_subjects.h -o kio_subjects.moc

#>+ 2
mocs: kio_subjects.moc

#>+ 3
boxcontaineritem.moc: $(srcdir)/boxcontaineritem.h
	$(MOC) $(srcdir)/boxcontaineritem.h -o boxcontaineritem.moc

#>+ 2
mocs: boxcontaineritem.moc

#>+ 3
maildrop.moc: $(srcdir)/maildrop.h
	$(MOC) $(srcdir)/maildrop.h -o maildrop.moc

#>+ 2
mocs: maildrop.moc

#>+ 3
hvcontainer.moc: $(srcdir)/hvcontainer.h
	$(MOC) $(srcdir)/hvcontainer.h -o hvcontainer.moc

#>+ 2
mocs: hvcontainer.moc

#>+ 3
dockedcontainer.moc: $(srcdir)/dockedcontainer.h
	$(MOC) $(srcdir)/dockedcontainer.h -o dockedcontainer.moc

#>+ 2
mocs: dockedcontainer.moc

#>+ 3
kornshell.moc: $(srcdir)/kornshell.h
	$(MOC) $(srcdir)/kornshell.h -o kornshell.moc

#>+ 2
mocs: kornshell.moc

#>+ 3
systemtray.moc: $(srcdir)/systemtray.h
	$(MOC) $(srcdir)/systemtray.h -o systemtray.moc

#>+ 2
mocs: systemtray.moc

#>+ 3
kornapp.moc: $(srcdir)/kornapp.h
	$(MOC) $(srcdir)/kornapp.h -o kornapp.moc

#>+ 2
mocs: kornapp.moc

#>+ 3
kio_delete.moc: $(srcdir)/kio_delete.h
	$(MOC) $(srcdir)/kio_delete.h -o kio_delete.moc

#>+ 2
mocs: kio_delete.moc

#>+ 3
dockeditem.moc: $(srcdir)/dockeditem.h
	$(MOC) $(srcdir)/dockeditem.h -o dockeditem.moc

#>+ 2
mocs: dockeditem.moc

#>+ 3
maildlg.moc: $(srcdir)/maildlg.h
	$(MOC) $(srcdir)/maildlg.h -o maildlg.moc

#>+ 2
mocs: maildlg.moc

#>+ 3
kornboxcfgimpl.moc: $(srcdir)/kornboxcfgimpl.h
	$(MOC) $(srcdir)/kornboxcfgimpl.h -o kornboxcfgimpl.moc

#>+ 2
mocs: kornboxcfgimpl.moc

#>+ 3
dcopdrop.moc: $(srcdir)/dcopdrop.h
	$(MOC) $(srcdir)/dcopdrop.h -o dcopdrop.moc

#>+ 2
mocs: dcopdrop.moc

#>+ 3
kio_count.moc: $(srcdir)/kio_count.h
	$(MOC) $(srcdir)/kio_count.h -o kio_count.moc

#>+ 2
mocs: kio_count.moc

#>+ 3
kio_single_subject.moc: $(srcdir)/kio_single_subject.h
	$(MOC) $(srcdir)/kio_single_subject.h -o kio_single_subject.moc

#>+ 2
mocs: kio_single_subject.moc

#>+ 3
polldrop.moc: $(srcdir)/polldrop.h
	$(MOC) $(srcdir)/polldrop.h -o polldrop.moc

#>+ 2
mocs: polldrop.moc

#>+ 3
kio.moc: $(srcdir)/kio.h
	$(MOC) $(srcdir)/kio.h -o kio.moc

#>+ 2
mocs: kio.moc

#>+ 3
label.moc.cpp: $(srcdir)/label.h
	$(MOC) $(srcdir)/label.h -o label.moc.cpp

#>+ 2
mocs: label.moc.cpp

#>+ 3
korncfgimpl.moc: $(srcdir)/korncfgimpl.h
	$(MOC) $(srcdir)/korncfgimpl.h -o korncfgimpl.moc

#>+ 2
mocs: korncfgimpl.moc

#>+ 3
clean-metasources:
	-rm -f  kornaccountcfgimpl.moc hvitem.moc accountmanager.moc boxcontainer.moc kio_read.moc keditlistboxman.moc subjectsdlg.moc kio_subjects.moc boxcontaineritem.moc maildrop.moc hvcontainer.moc dockedcontainer.moc kornshell.moc systemtray.moc kornapp.moc kio_delete.moc dockeditem.moc maildlg.moc kornboxcfgimpl.moc dcopdrop.moc kio_count.moc kio_single_subject.moc polldrop.moc kio.moc label.moc.cpp korncfgimpl.moc

#>+ 2
KDE_DIST=protocol.h progress_dialog.ui dockedcontainer.h Makefile.in uninstall.desktop hi32-app-korn.png hi48-app-korn.png kornboxcfg.ui polldrop.h korncfg.ui hi16-app-korn.png utils.h KOrn.desktop label.h kornaccountcfg.ui Makefile.am 

#>+ 5
clean-idl:
	-rm -f \
	boxcontaineritem_skel.cpp boxcontaineritem_skel.h boxcontaineritem.kidl \
	dcopdropif_skel.cpp dcopdropif_skel.h dcopdropif.kidl 

#>+ 7
clean-ui:
	-rm -f \
	kornaccountcfg.cpp kornaccountcfg.h kornaccountcfg.moc \
	kornboxcfg.cpp kornboxcfg.h kornboxcfg.moc \
	korncfg.cpp korncfg.h korncfg.moc \
	progress_dialog.cpp progress_dialog.h progress_dialog.moc 

#>+ 2
docs-am:

#>+ 13
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-korn.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/korn.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-korn.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/korn.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-korn.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/korn.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/korn.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/korn.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/korn.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  korn/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  korn/Makefile
	cd $(top_srcdir) && perl admin/am_edit korn/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
korn.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/accountmanager.cpp $(srcdir)/account_input.cpp $(srcdir)/boxcontainer.cpp $(srcdir)/boxcontaineritem.cpp $(srcdir)/dcopdrop.cpp $(srcdir)/dcopdropif.cpp $(srcdir)/dcop_proto.cpp $(srcdir)/dockedcontainer.cpp $(srcdir)/dockeditem.cpp $(srcdir)/hvcontainer.cpp $(srcdir)/hvitem.cpp $(srcdir)/keditlistboxman.cpp $(srcdir)/nntp_proto.cpp $(srcdir)/maildrop.cpp $(srcdir)/main.cpp $(srcdir)/polldrop.cpp $(srcdir)/protocols.cpp $(srcdir)/kornshell.cpp $(srcdir)/subjectsdlg.cpp $(srcdir)/maildlg.cpp $(srcdir)/mailid.cpp $(srcdir)/mailsubject.cpp $(srcdir)/mbox_proto.cpp $(srcdir)/imap_proto.cpp $(srcdir)/intid.cpp $(srcdir)/stringid.cpp $(srcdir)/kornapp.cpp $(srcdir)/kio.cpp $(srcdir)/kio_count.cpp $(srcdir)/kio_proto.cpp $(srcdir)/kio_subjects.cpp $(srcdir)/kio_single_subject.cpp $(srcdir)/kio_read.cpp $(srcdir)/kio_delete.cpp $(srcdir)/kmail_proto.cpp $(srcdir)/sortedmailsubject.cpp $(srcdir)/korncfgimpl.cpp $(srcdir)/kornaccountcfgimpl.cpp $(srcdir)/kornboxcfgimpl.cpp $(srcdir)/password.cpp $(srcdir)/pop3_proto.cpp $(srcdir)/systemtray.cpp $(srcdir)/process_proto.cpp $(srcdir)/qmail_proto.cpp boxcontaineritem_skel.cpp dcopdropif_skel.cpp kornaccountcfg.cpp kornboxcfg.cpp korncfg.cpp progress_dialog.cpp label.moc.cpp  kornaccountcfgimpl.moc hvitem.moc korncfg.moc kornaccountcfg.moc kio_read.moc boxcontainer.moc accountmanager.moc keditlistboxman.moc progress_dialog.moc subjectsdlg.moc kio_subjects.moc kornboxcfg.moc boxcontaineritem.moc maildrop.moc hvcontainer.moc dockedcontainer.moc kornshell.moc kornapp.moc systemtray.moc kio_delete.moc dockeditem.moc kornboxcfgimpl.moc maildlg.moc kio_count.moc dcopdrop.moc polldrop.moc kio_single_subject.moc kio.moc korncfgimpl.moc
	@echo 'creating korn.all_cpp.cpp ...'; \
	rm -f korn.all_cpp.files korn.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> korn.all_cpp.final; \
	for file in accountmanager.cpp account_input.cpp boxcontainer.cpp boxcontaineritem.cpp dcopdrop.cpp dcopdropif.cpp dcop_proto.cpp dockedcontainer.cpp dockeditem.cpp hvcontainer.cpp hvitem.cpp keditlistboxman.cpp nntp_proto.cpp maildrop.cpp main.cpp polldrop.cpp protocols.cpp kornshell.cpp subjectsdlg.cpp maildlg.cpp mailid.cpp mailsubject.cpp mbox_proto.cpp imap_proto.cpp intid.cpp stringid.cpp kornapp.cpp kio.cpp kio_count.cpp kio_proto.cpp kio_subjects.cpp kio_single_subject.cpp kio_read.cpp kio_delete.cpp kmail_proto.cpp sortedmailsubject.cpp korncfgimpl.cpp kornaccountcfgimpl.cpp kornboxcfgimpl.cpp password.cpp pop3_proto.cpp systemtray.cpp process_proto.cpp qmail_proto.cpp boxcontaineritem_skel.cpp dcopdropif_skel.cpp kornaccountcfg.cpp kornboxcfg.cpp korncfg.cpp progress_dialog.cpp label.moc.cpp ; do \
	  echo "#include \"$$file\"" >> korn.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> korn.all_cpp.final; \
	done; \
	cat korn.all_cpp.final korn.all_cpp.files > korn.all_cpp.cpp; \
	rm -f korn.all_cpp.final korn.all_cpp.files

#>+ 3
clean-final:
	-rm -f korn.all_cpp.cpp

#>+ 3
final:
	$(MAKE) korn_OBJECTS="$(korn_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) korn_OBJECTS="$(korn_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) korn_OBJECTS="$(korn_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) korn_OBJECTS="$(korn_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 97
$(srcdir)/mbox_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
hvitem.o: hvitem.moc 
kornaccountcfgimpl.o: kornaccountcfgimpl.moc 
polldrop.lo: polldrop.moc 
systemtray.o: systemtray.moc 
$(srcdir)/main.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/subjectsdlg.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/kornaccountcfgimpl.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
maildlg.lo: maildlg.moc 
nmcheck-am: nmcheck
$(srcdir)/kornboxcfgimpl.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kio_delete.lo: kio_delete.moc 
kornapp.o: kornapp.moc 
kio_single_subject.o: kio_single_subject.moc 
$(srcdir)/kio_count.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kio.lo: kio.moc 
kio_subjects.o: kio_subjects.moc 
$(srcdir)/accountmanager.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kornboxcfgimpl.lo: kornboxcfgimpl.moc 
korncfgimpl.lo: korncfgimpl.moc 
kornboxcfgimpl.o: kornboxcfgimpl.moc 
kornaccountcfgimpl.lo: kornaccountcfgimpl.moc 
dockeditem.lo: dockeditem.moc 
kio_read.lo: kio_read.moc 
$(srcdir)/password.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/kio_delete.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/pop3_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kornshell.lo: kornshell.moc 
hvcontainer.o: hvcontainer.moc 
kio.o: kio.moc 
hvcontainer.lo: hvcontainer.moc 
$(srcdir)/imap_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
polldrop.o: polldrop.moc 
$(srcdir)/dockedcontainer.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/kio_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
maildrop.o: maildrop.moc 
$(srcdir)/keditlistboxman.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/maildlg.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/mailsubject.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
keditlistboxman.o: keditlistboxman.moc 
accountmanager.o: accountmanager.moc 
$(srcdir)/hvcontainer.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/kio_single_subject.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
hvitem.lo: hvitem.moc 
$(srcdir)/sortedmailsubject.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kio_read.o: kio_read.moc 
dockedcontainer.lo: dockedcontainer.moc 
systemtray.lo: systemtray.moc 
$(srcdir)/hvitem.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/kio.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
dockedcontainer.o: dockedcontainer.moc 
kio_count.o: kio_count.moc 
$(srcdir)/mailid.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/kornshell.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/process_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
maildrop.lo: maildrop.moc 
$(srcdir)/protocols.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/kmail_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
dcopdrop.lo: dcopdrop.moc 
$(srcdir)/boxcontainer.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
keditlistboxman.lo: keditlistboxman.moc 
$(srcdir)/kornapp.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
boxcontaineritem.lo: boxcontaineritem.moc 
kornapp.lo: kornapp.moc 
$(srcdir)/dcop_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kio_count.lo: kio_count.moc 
$(srcdir)/intid.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
accountmanager.lo: accountmanager.moc 
$(srcdir)/qmail_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/dockeditem.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
boxcontainer.lo: boxcontainer.moc 
kio_delete.o: kio_delete.moc 
kornshell.o: kornshell.moc 
subjectsdlg.lo: subjectsdlg.moc 
$(srcdir)/dcopdropif.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/systemtray.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/dcopdrop.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kio_single_subject.lo: kio_single_subject.moc 
$(srcdir)/account_input.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/nntp_proto.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/polldrop.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/stringid.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
nmcheck: 
dcopdrop.o: dcopdrop.moc 
boxcontaineritem.o: boxcontaineritem.moc 
subjectsdlg.o: subjectsdlg.moc 
$(srcdir)/korncfgimpl.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
kio_subjects.lo: kio_subjects.moc 
$(srcdir)/kio_read.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
dockeditem.o: dockeditem.moc 
$(srcdir)/maildrop.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
boxcontainer.o: boxcontainer.moc 
maildlg.o: maildlg.moc 
korncfgimpl.o: korncfgimpl.moc 
$(srcdir)/kio_subjects.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 
$(srcdir)/boxcontaineritem.cpp: kornaccountcfg.h kornboxcfg.h korncfg.h progress_dialog.h 

#>+ 60
progress_dialog.cpp: $(srcdir)/progress_dialog.ui progress_dialog.h progress_dialog.moc
	rm -f progress_dialog.cpp
	echo '#include <kdialog.h>' > progress_dialog.cpp
	echo '#include <klocale.h>' >> progress_dialog.cpp
	$(UIC) -tr ${UIC_TR} -i progress_dialog.h $(srcdir)/progress_dialog.ui > progress_dialog.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" progress_dialog.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_progress_dialog,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> progress_dialog.cpp ;\
	rm -f progress_dialog.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "progress_dialog.moc"' >> progress_dialog.cpp; else rm -f progress_dialog.cpp ; exit $$ret ; fi

progress_dialog.h: $(srcdir)/progress_dialog.ui
	rm -rf progress_dialog.h;
	$(UIC) $(srcdir)/progress_dialog.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> progress_dialog.h ;
progress_dialog.moc: progress_dialog.h
	$(MOC) progress_dialog.h -o progress_dialog.moc

kornboxcfg.cpp: $(srcdir)/kornboxcfg.ui kornboxcfg.h kornboxcfg.moc
	rm -f kornboxcfg.cpp
	echo '#include <kdialog.h>' > kornboxcfg.cpp
	echo '#include <klocale.h>' >> kornboxcfg.cpp
	$(UIC) -tr ${UIC_TR} -i kornboxcfg.h $(srcdir)/kornboxcfg.ui > kornboxcfg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kornboxcfg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kornboxcfg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kornboxcfg.cpp ;\
	rm -f kornboxcfg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kornboxcfg.moc"' >> kornboxcfg.cpp; else rm -f kornboxcfg.cpp ; exit $$ret ; fi

kornboxcfg.h: $(srcdir)/kornboxcfg.ui
	rm -rf kornboxcfg.h;
	$(UIC) $(srcdir)/kornboxcfg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kornboxcfg.h ;
kornboxcfg.moc: kornboxcfg.h
	$(MOC) kornboxcfg.h -o kornboxcfg.moc

kornaccountcfg.cpp: $(srcdir)/kornaccountcfg.ui kornaccountcfg.h kornaccountcfg.moc
	rm -f kornaccountcfg.cpp
	echo '#include <kdialog.h>' > kornaccountcfg.cpp
	echo '#include <klocale.h>' >> kornaccountcfg.cpp
	$(UIC) -tr ${UIC_TR} -i kornaccountcfg.h $(srcdir)/kornaccountcfg.ui > kornaccountcfg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" kornaccountcfg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_kornaccountcfg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> kornaccountcfg.cpp ;\
	rm -f kornaccountcfg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "kornaccountcfg.moc"' >> kornaccountcfg.cpp; else rm -f kornaccountcfg.cpp ; exit $$ret ; fi

kornaccountcfg.h: $(srcdir)/kornaccountcfg.ui
	rm -rf kornaccountcfg.h;
	$(UIC) $(srcdir)/kornaccountcfg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> kornaccountcfg.h ;
kornaccountcfg.moc: kornaccountcfg.h
	$(MOC) kornaccountcfg.h -o kornaccountcfg.moc

korncfg.cpp: $(srcdir)/korncfg.ui korncfg.h korncfg.moc
	rm -f korncfg.cpp
	echo '#include <kdialog.h>' > korncfg.cpp
	echo '#include <klocale.h>' >> korncfg.cpp
	$(UIC) -tr ${UIC_TR} -i korncfg.h $(srcdir)/korncfg.ui > korncfg.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" korncfg.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_korncfg,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> korncfg.cpp ;\
	rm -f korncfg.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "korncfg.moc"' >> korncfg.cpp; else rm -f korncfg.cpp ; exit $$ret ; fi

korncfg.h: $(srcdir)/korncfg.ui
	rm -rf korncfg.h;
	$(UIC) $(srcdir)/korncfg.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> korncfg.h ;
korncfg.moc: korncfg.h
	$(MOC) korncfg.h -o korncfg.moc

# Makefile.in generated by automake 1.10.1 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = akregator$(EXEEXT)
DIST_COMMON = $(akregatorinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/admin/Doxyfile.am
subdir = akregator/src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" \
	"$(DESTDIR)$(kde_servicetypesdir)" "$(DESTDIR)$(kdelnkdir)" \
	"$(DESTDIR)$(partdesktopdir)" "$(DESTDIR)$(partrcdir)" \
	"$(DESTDIR)$(shellrcdir)" "$(DESTDIR)$(xdg_appsdir)" \
	"$(DESTDIR)$(akregatorincludedir)"
kde_moduleLTLIBRARIES_INSTALL = $(INSTALL)
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(kde_module_LTLIBRARIES) $(lib_LTLIBRARIES)
libakregatorpart_la_DEPENDENCIES = libakregatorprivate.la
am_libakregatorpart_la_OBJECTS = searchbar.lo akregator_run.lo \
	articlelistview.lo actionmanager.lo actionmanagerimpl.lo \
	frame.lo viewer.lo articleviewer.lo addfeeddialog.lo \
	propertiesdialog.lo pageviewer.lo tabwidget.lo feedlistview.lo \
	treenodeitem.lo folderitem.lo feeditem.lo progressmanager.lo \
	kernel.lo listtabwidget.lo tagnodeitem.lo configdialog.lo \
	settings_advanced.lo akregator_part.lo akregator_view.lo \
	notificationmanager.lo tagaction.lo tagpropertiesdialog.lo \
	tagfolderitem.lo speechclient.lo
#>- libakregatorpart_la_OBJECTS = $(am_libakregatorpart_la_OBJECTS)
#>+ 12
libakregatorpart_la_final_OBJECTS = libakregatorpart_la.all_cpp.lo 
libakregatorpart_la_nofinal_OBJECTS = searchbar.lo akregator_run.lo \
	articlelistview.lo actionmanager.lo actionmanagerimpl.lo \
	frame.lo viewer.lo articleviewer.lo addfeeddialog.lo \
	propertiesdialog.lo pageviewer.lo tabwidget.lo feedlistview.lo \
	treenodeitem.lo folderitem.lo feeditem.lo progressmanager.lo \
	kernel.lo listtabwidget.lo tagnodeitem.lo configdialog.lo \
	settings_advanced.lo akregator_part.lo akregator_view.lo \
	notificationmanager.lo tagaction.lo tagpropertiesdialog.lo \
	tagfolderitem.lo speechclient.lo akregator_partiface_skel.lo kspeechsink_skel.lo kspeech_stub.lo addfeedwidgetbase.lo propertieswidgetbase.lo settings_appearance.lo settings_general.lo settings_archive.lo settings_browser.lo settings_advancedbase.lo tagpropertieswidgetbase.lo
@KDE_USE_FINAL_FALSE@libakregatorpart_la_OBJECTS = $(libakregatorpart_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libakregatorpart_la_OBJECTS = $(libakregatorpart_la_final_OBJECTS)
#>- libakregatorpart_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libakregatorpart_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libakregatorpart_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libakregatorpart_la_LDFLAGS) $(LDFLAGS) -o $@
am__DEPENDENCIES_1 =
libakregatorprivate_la_DEPENDENCIES =  \
	$(top_builddir)/libkdepim/libkdepim.la \
	$(top_builddir)/akregator/src/librss/librsslocal.la \
	$(am__DEPENDENCIES_1)
am_libakregatorprivate_la_OBJECTS = articlefilter.lo aboutdata.lo \
	trayicon.lo article.lo feed.lo treenode.lo treenodevisitor.lo \
	tagnode.lo folder.lo tagfolder.lo nodelist.lo feedlist.lo \
	tagnodelist.lo fetchqueue.lo feediconmanager.lo \
	articleinterceptor.lo plugin.lo pluginmanager.lo \
	storagefactoryregistry.lo storage.lo tag.lo tagset.lo \
	storagedummyimpl.lo storagefactorydummyimpl.lo \
	simplenodeselector.lo feedstoragedummyimpl.lo dragobjects.lo \
	utils.lo
#>- libakregatorprivate_la_OBJECTS = $(am_libakregatorprivate_la_OBJECTS)
#>+ 12
libakregatorprivate_la_final_OBJECTS = libakregatorprivate_la.all_cpp.lo 
libakregatorprivate_la_nofinal_OBJECTS = articlefilter.lo aboutdata.lo \
	trayicon.lo article.lo feed.lo treenode.lo treenodevisitor.lo \
	tagnode.lo folder.lo tagfolder.lo nodelist.lo feedlist.lo \
	tagnodelist.lo fetchqueue.lo feediconmanager.lo \
	articleinterceptor.lo plugin.lo pluginmanager.lo \
	storagefactoryregistry.lo storage.lo tag.lo tagset.lo \
	storagedummyimpl.lo storagefactorydummyimpl.lo \
	simplenodeselector.lo feedstoragedummyimpl.lo dragobjects.lo \
	utils.lo feediconmanager_skel.lo akregatorconfig.lo
@KDE_USE_FINAL_FALSE@libakregatorprivate_la_OBJECTS = $(libakregatorprivate_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libakregatorprivate_la_OBJECTS = $(libakregatorprivate_la_final_OBJECTS)
#>- libakregatorprivate_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libakregatorprivate_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libakregatorprivate_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libakregatorprivate_la_LDFLAGS) $(LDFLAGS) -o $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_akregator_OBJECTS = main.$(OBJEXT) mainwindow.$(OBJEXT)
#>- akregator_OBJECTS = $(am_akregator_OBJECTS)
#>+ 4
akregator_final_OBJECTS = akregator.all_cpp.o 
akregator_nofinal_OBJECTS = main.$(OBJEXT) mainwindow.$(OBJEXT)
@KDE_USE_FINAL_FALSE@akregator_OBJECTS = $(akregator_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@akregator_OBJECTS = $(akregator_final_OBJECTS)
akregator_DEPENDENCIES = $(am__DEPENDENCIES_1) libakregatorprivate.la
#>- akregator_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(akregator_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
akregator_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(akregator_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libakregatorpart_la_SOURCES) \
	$(libakregatorprivate_la_SOURCES) $(akregator_SOURCES)
DIST_SOURCES = $(libakregatorpart_la_SOURCES) \
	$(libakregatorprivate_la_SOURCES) $(akregator_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
kde_kcfgDATA_INSTALL = $(INSTALL_DATA)
kde_servicetypesDATA_INSTALL = $(INSTALL_DATA)
kdelnkDATA_INSTALL = $(INSTALL_DATA)
partdesktopDATA_INSTALL = $(INSTALL_DATA)
partrcDATA_INSTALL = $(INSTALL_DATA)
shellrcDATA_INSTALL = $(INSTALL_DATA)
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kde_kcfg_DATA) $(kde_servicetypes_DATA) $(kdelnk_DATA) \
	$(partdesktop_DATA) $(partrc_DATA) $(shellrc_DATA) \
	$(xdg_apps_DATA)
akregatorincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(akregatorinclude_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GLIBC21 = @GLIBC21@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GMSGFMT = @GMSGFMT@
GPG = @GPG@
GPGME_CFLAGS = @GPGME_CFLAGS@
GPGME_CONFIG = @GPGME_CONFIG@
GPGME_LIBS = @GPGME_LIBS@
GPGME_LIBS_DEP = @GPGME_LIBS_DEP@
GPGSM = @GPGSM@
GPG_PATH = @GPG_PATH@
GREP = @GREP@
HAVE_BROKEN_TIMSIEVED = @HAVE_BROKEN_TIMSIEVED@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
HAVE_LOCKDEV_H = @HAVE_LOCKDEV_H@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KANDY_LIBLOCKDEV = @KANDY_LIBLOCKDEV@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBXSS = @LIBXSS@
LIBZ = @LIBZ@
LIB_BLUETOOTH = @LIB_BLUETOOTH@
LIB_GNOKII = @LIB_GNOKII@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_LOCKDEV = @LIB_LOCKDEV@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MAL_INCLUDE = @MAL_INCLUDE@
MAL_LIB = @MAL_LIB@
MAL_RPATH = @MAL_RPATH@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
OPENSYNCENGINE_CFLAGS = @OPENSYNCENGINE_CFLAGS@
OPENSYNCENGINE_LIBS = @OPENSYNCENGINE_LIBS@
OPENSYNC_CFLAGS = @OPENSYNC_CFLAGS@
OPENSYNC_CONFIGDIR = @OPENSYNC_CONFIGDIR@
OPENSYNC_FORMATSDIR = @OPENSYNC_FORMATSDIR@
OPENSYNC_HEADERDIR = @OPENSYNC_HEADERDIR@
OPENSYNC_LIBS = @OPENSYNC_LIBS@
OPENSYNC_PLUGINDIR = @OPENSYNC_PLUGINDIR@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PERL_CFLAGS = @PERL_CFLAGS@
PERL_LDFLAGS = @PERL_LDFLAGS@
PISOCK_INCLUDE = @PISOCK_INCLUDE@
PISOCK_LDFLAGS = @PISOCK_LDFLAGS@
PISOCK_LIB = @PISOCK_LIB@
PKG_CONFIG = @PKG_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SASL2_LIBS = @SASL2_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

#set the include path for X, qt and KDE
INCLUDES = -I$(top_srcdir)/akregator/src/librss -I$(top_srcdir) $(all_includes)

# let automoc handle all of the meta source files (moc).
#>- METASOURCES = AUTO
KDE_ICON = AUTO

# the application source, library search path, and link libraries
akregator_SOURCES = main.cpp mainwindow.cpp
akregator_LDFLAGS = $(KDE_RPATH) $(all_libraries)
akregator_LDADD = $(LIB_KPARTS) libakregatorprivate.la
#akregator_LDADD = $(LIB_KPARTS) libakregatorprivate.la $(top_builddir)/libkdepim/libkdepim.la

# this is where the desktop file will go
xdg_apps_DATA = akregator.desktop

# this is where the shell's XML-GUI resource file goes
shellrcdir = $(kde_datadir)/akregator
shellrc_DATA = akregator_shell.rc
kdelnk_DATA = feed.protocol
kdelnkdir = $(kde_servicesdir)

#########################################################################
# PRIVATE SECTION
#########################################################################

# install headers (for storage plugins)
akregatorinclude_HEADERS = storage.h feedstorage.h storagefactory.h storagefactoryregistry.h \
                           plugin.h articleinterceptor.h akregator_export.h

akregatorincludedir = $(includedir)/akregator

# this is a lib shared by both the KPart and the main application
lib_LTLIBRARIES = libakregatorprivate.la
#>- libakregatorprivate_la_SOURCES = akregatorconfig.kcfgc \
#>-                                  articlefilter.cpp \
#>- 				 aboutdata.cpp \
#>-                                  trayicon.cpp \
#>- 				 article.cpp \
#>- 				 feed.cpp \
#>- 				 treenode.cpp \
#>-                                  treenodevisitor.cpp \
#>-                                  tagnode.cpp \
#>- 				 folder.cpp \
#>-                                  tagfolder.cpp \
#>-                                  nodelist.cpp \
#>- 				 feedlist.cpp \
#>-                                  tagnodelist.cpp \
#>- 			         fetchqueue.cpp \
#>- 			  	 feediconmanager.cpp \
#>- 				feediconmanager.skel \
#>-                                  articleinterceptor.cpp \
#>-                                 plugin.cpp \
#>-  				pluginmanager.cpp \
#>- 				storagefactoryregistry.cpp \
#>- 				storage.cpp \
#>-                                 tag.cpp \
#>-                                 tagset.cpp \
#>-                                 storagedummyimpl.cpp \
#>-                                 storagefactorydummyimpl.cpp \
#>-                                 simplenodeselector.cpp \
#>-                                 feedstoragedummyimpl.cpp \
#>-                                 dragobjects.cpp \
#>-                                 utils.cpp
#>+ 30
libakregatorprivate_la_SOURCES= \
                                 articlefilter.cpp \
				 aboutdata.cpp \
                                 trayicon.cpp \
				 article.cpp \
				 feed.cpp \
				 treenode.cpp \
                                 treenodevisitor.cpp \
                                 tagnode.cpp \
				 folder.cpp \
                                 tagfolder.cpp \
                                 nodelist.cpp \
				 feedlist.cpp \
                                 tagnodelist.cpp \
			         fetchqueue.cpp \
			  	 feediconmanager.cpp \
				 \
                                 articleinterceptor.cpp \
                                plugin.cpp \
 				pluginmanager.cpp \
				storagefactoryregistry.cpp \
				storage.cpp \
                                tag.cpp \
                                tagset.cpp \
                                storagedummyimpl.cpp \
                                storagefactorydummyimpl.cpp \
                                simplenodeselector.cpp \
                                feedstoragedummyimpl.cpp \
                                dragobjects.cpp \
                                utils.cpp feediconmanager_skel.cpp akregatorconfig.cpp

libakregatorprivate_la_LDFLAGS = $(all_libraries) -avoid-version -no-undefined 
libakregatorprivate_la_LIBADD = $(top_builddir)/libkdepim/libkdepim.la \
	$(top_builddir)/akregator/src/librss/librsslocal.la $(LIB_KHTML)


#########################################################################
# KPART SECTION
#########################################################################
kde_kcfg_DATA = akregator.kcfg
kde_module_LTLIBRARIES = libakregatorpart.la
kspeech_DIR = $(kde_includes)
kspeechsink_DIR = $(kde_includes)

# the Part's source, library search path, and link libraries
#>- libakregatorpart_la_SOURCES = \
#>- 	searchbar.cpp \
#>- 	akregator_run.cpp \
#>- 	articlelistview.cpp \
#>- 	actionmanager.cpp \
#>-         actionmanagerimpl.cpp \
#>- 	frame.cpp \
#>- 	viewer.cpp \
#>- 	articleviewer.cpp \
#>- 	addfeeddialog.cpp \
#>- 	addfeedwidgetbase.ui \
#>- 	propertiesdialog.cpp \
#>- 	propertieswidgetbase.ui \
#>- 	pageviewer.cpp \
#>- 	tabwidget.cpp \
#>- 	feedlistview.cpp \
#>- 	treenodeitem.cpp \
#>- 	folderitem.cpp \
#>- 	feeditem.cpp \
#>-         progressmanager.cpp \
#>-         kernel.cpp \
#>-         listtabwidget.cpp \
#>-         settings_appearance.ui \
#>- 	settings_general.ui \
#>- 	settings_archive.ui \
#>- 	settings_browser.ui \
#>- 	settings_advancedbase.ui \
#>-         tagnodeitem.cpp \
#>- 	configdialog.cpp \
#>- 	settings_advanced.cpp \
#>- 	akregator_partiface.skel \
#>- 	akregator_part.cpp \
#>- 	akregator_view.cpp \
#>-         notificationmanager.cpp \
#>-         tagaction.cpp \
#>-         tagpropertieswidgetbase.ui \
#>-         tagpropertiesdialog.cpp \
#>-         tagfolderitem.cpp \
#>-         speechclient.cpp \
#>- 	kspeechsink.skel \
#>- 	kspeech.stub
#>+ 41
libakregatorpart_la_SOURCES=\
	searchbar.cpp \
	akregator_run.cpp \
	articlelistview.cpp \
	actionmanager.cpp \
        actionmanagerimpl.cpp \
	frame.cpp \
	viewer.cpp \
	articleviewer.cpp \
	addfeeddialog.cpp \
	 \
	propertiesdialog.cpp \
	 \
	pageviewer.cpp \
	tabwidget.cpp \
	feedlistview.cpp \
	treenodeitem.cpp \
	folderitem.cpp \
	feeditem.cpp \
        progressmanager.cpp \
        kernel.cpp \
        listtabwidget.cpp \
         \
	 \
	 \
	 \
	 \
        tagnodeitem.cpp \
	configdialog.cpp \
	settings_advanced.cpp \
	 \
	akregator_part.cpp \
	akregator_view.cpp \
        notificationmanager.cpp \
        tagaction.cpp \
         \
        tagpropertiesdialog.cpp \
        tagfolderitem.cpp \
        speechclient.cpp \
	 \
	 akregator_partiface_skel.cpp kspeechsink_skel.cpp kspeech_stub.cpp addfeedwidgetbase.cpp propertieswidgetbase.cpp settings_appearance.cpp settings_general.cpp settings_archive.cpp settings_browser.cpp settings_advancedbase.cpp tagpropertieswidgetbase.cpp

libakregatorpart_la_LDFLAGS = $(KDE_RPATH) $(KDE_PLUGIN) $(LIB_KUTILS) -avoid-version -no-undefined $(all_libraries)
libakregatorpart_la_LIBADD = libakregatorprivate.la 

# this is where the desktop file will go
partdesktopdir = $(kde_servicesdir)
partdesktop_DATA = akregator_part.desktop

# this is where the part's XML-GUI resource file goes
partrcdir = $(kde_datadir)/akregator
partrc_DATA = articleviewer.rc pageviewer.rc akregator_part.rc eventsrc
kde_servicetypes_DATA = akregator_plugin.desktop
SUBDIRS = librss about . mk4storage pics
DOXYGEN_REFERENCES = kdeui
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/admin/Doxyfile.am $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  akregator/src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --foreign  akregator/src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  akregator/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  akregator/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit akregator/src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-kde_moduleLTLIBRARIES: $(kde_module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(kde_moduledir)" || $(MKDIR_P) "$(DESTDIR)$(kde_moduledir)"
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(kde_moduledir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(kde_moduleLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(kde_moduledir)/$$f"; \
	  else :; fi; \
	done

uninstall-kde_moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(kde_moduledir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(kde_moduledir)/$$p"; \
	done

clean-kde_moduleLTLIBRARIES:
	-test -z "$(kde_module_LTLIBRARIES)" || rm -f $(kde_module_LTLIBRARIES)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libakregatorpart.la: $(libakregatorpart_la_OBJECTS) $(libakregatorpart_la_DEPENDENCIES) 
	$(libakregatorpart_la_LINK) -rpath $(kde_moduledir) $(libakregatorpart_la_OBJECTS) $(libakregatorpart_la_LIBADD) $(LIBS)
libakregatorprivate.la: $(libakregatorprivate_la_OBJECTS) $(libakregatorprivate_la_DEPENDENCIES) 
	$(libakregatorprivate_la_LINK) -rpath $(libdir) $(libakregatorprivate_la_OBJECTS) $(libakregatorprivate_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
akregator$(EXEEXT): $(akregator_OBJECTS) $(akregator_DEPENDENCIES) 
	@rm -f akregator$(EXEEXT)
	$(akregator_LINK) $(akregator_OBJECTS) $(akregator_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aboutdata.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actionmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actionmanagerimpl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/addfeeddialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/akregator_part.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/akregator_run.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/akregator_view.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/article.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/articlefilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/articleinterceptor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/articlelistview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/articleviewer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dragobjects.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feed.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feediconmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feeditem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feedlist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feedlistview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/feedstoragedummyimpl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fetchqueue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/folder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/folderitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kernel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listtabwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mainwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nodelist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/notificationmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pageviewer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plugin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pluginmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/progressmanager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propertiesdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/searchbar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/settings_advanced.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simplenodeselector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/speechclient.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storagedummyimpl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storagefactorydummyimpl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/storagefactoryregistry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tag.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagaction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagfolder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagfolderitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagnode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagnodeitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagnodelist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagpropertiesdialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trayicon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treenode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treenodeitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treenodevisitor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewer.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kde_kcfgDATA: $(kde_kcfg_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_kcfgdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_kcfgdir)"
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_kcfgDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  $(kde_kcfgDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done

uninstall-kde_kcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_kcfg_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_kcfgdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_kcfgdir)/$$f"; \
	done
install-kde_servicetypesDATA: $(kde_servicetypes_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kde_servicetypesdir)" || $(MKDIR_P) "$(DESTDIR)$(kde_servicetypesdir)"
	@list='$(kde_servicetypes_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kde_servicetypesDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kde_servicetypesdir)/$$f'"; \
	  $(kde_servicetypesDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kde_servicetypesdir)/$$f"; \
	done

uninstall-kde_servicetypesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_servicetypes_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kde_servicetypesdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kde_servicetypesdir)/$$f"; \
	done
install-kdelnkDATA: $(kdelnk_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kdelnkdir)" || $(MKDIR_P) "$(DESTDIR)$(kdelnkdir)"
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(kdelnkDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kdelnkdir)/$$f'"; \
	  $(kdelnkDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kdelnkdir)/$$f"; \
	done

uninstall-kdelnkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(kdelnkdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kdelnkdir)/$$f"; \
	done
install-partdesktopDATA: $(partdesktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(partdesktopdir)" || $(MKDIR_P) "$(DESTDIR)$(partdesktopdir)"
	@list='$(partdesktop_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(partdesktopDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(partdesktopdir)/$$f'"; \
	  $(partdesktopDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(partdesktopdir)/$$f"; \
	done

uninstall-partdesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(partdesktop_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(partdesktopdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(partdesktopdir)/$$f"; \
	done
install-partrcDATA: $(partrc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(partrcdir)" || $(MKDIR_P) "$(DESTDIR)$(partrcdir)"
	@list='$(partrc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(partrcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(partrcdir)/$$f'"; \
	  $(partrcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(partrcdir)/$$f"; \
	done

uninstall-partrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(partrc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(partrcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(partrcdir)/$$f"; \
	done
install-shellrcDATA: $(shellrc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(shellrcdir)" || $(MKDIR_P) "$(DESTDIR)$(shellrcdir)"
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(shellrcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  $(shellrcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(shellrcdir)/$$f"; \
	done

uninstall-shellrcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(shellrc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(shellrcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(shellrcdir)/$$f"; \
	done
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(xdg_appsdir)" || $(MKDIR_P) "$(DESTDIR)$(xdg_appsdir)"
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(xdg_appsDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  $(xdg_appsDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(xdg_appsdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(xdg_appsdir)/$$f"; \
	done
install-akregatorincludeHEADERS: $(akregatorinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(akregatorincludedir)" || $(MKDIR_P) "$(DESTDIR)$(akregatorincludedir)"
	@list='$(akregatorinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(akregatorincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(akregatorincludedir)/$$f'"; \
	  $(akregatorincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(akregatorincludedir)/$$f"; \
	done

uninstall-akregatorincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(akregatorinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(akregatorincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(akregatorincludedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kde_kcfgdir)" "$(DESTDIR)$(kde_servicetypesdir)" "$(DESTDIR)$(kdelnkdir)" "$(DESTDIR)$(partdesktopdir)" "$(DESTDIR)$(partrcdir)" "$(DESTDIR)$(shellrcdir)" "$(DESTDIR)$(xdg_appsdir)" "$(DESTDIR)$(akregatorincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-kde_moduleLTLIBRARIES \
#>- 	clean-libLTLIBRARIES clean-libtool mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-idl clean-ui clean-kcfg clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-kde_moduleLTLIBRARIES \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-akregatorincludeHEADERS install-data-local \
#>- 	install-kde_kcfgDATA install-kde_moduleLTLIBRARIES \
#>- 	install-kde_servicetypesDATA install-kdelnkDATA \
#>- 	install-partdesktopDATA install-partrcDATA install-shellrcDATA \
#>- 	install-xdg_appsDATA
#>+ 5
install-data-am: install-kde-icons   install-akregatorincludeHEADERS install-data-local \
	install-kde_kcfgDATA \
	install-kde_servicetypesDATA install-kdelnkDATA \
	install-partdesktopDATA install-partrcDATA install-shellrcDATA \
	install-xdg_appsDATA

install-dvi: install-dvi-recursive

#>- install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
#>+ 1
install-exec-am:  install-binPROGRAMS install-libLTLIBRARIES install-kde_moduleLTLIBRARIES

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-akregatorincludeHEADERS uninstall-binPROGRAMS \
#>- 	uninstall-kde_kcfgDATA uninstall-kde_moduleLTLIBRARIES \
#>- 	uninstall-kde_servicetypesDATA uninstall-kdelnkDATA \
#>- 	uninstall-libLTLIBRARIES uninstall-local \
#>- 	uninstall-partdesktopDATA uninstall-partrcDATA \
#>- 	uninstall-shellrcDATA uninstall-xdg_appsDATA
#>+ 6
uninstall-am: uninstall-kde-icons  uninstall-akregatorincludeHEADERS uninstall-binPROGRAMS \
	uninstall-kde_kcfgDATA uninstall-kde_moduleLTLIBRARIES \
	uninstall-kde_servicetypesDATA uninstall-kdelnkDATA \
	uninstall-libLTLIBRARIES uninstall-local \
	uninstall-partdesktopDATA uninstall-partrcDATA \
	uninstall-shellrcDATA uninstall-xdg_appsDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-kde_moduleLTLIBRARIES clean-libLTLIBRARIES \
	clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-akregatorincludeHEADERS install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-kde_kcfgDATA \
	install-kde_moduleLTLIBRARIES install-kde_servicetypesDATA \
	install-kdelnkDATA install-libLTLIBRARIES install-man \
	install-partdesktopDATA install-partrcDATA install-pdf \
	install-pdf-am install-ps install-ps-am install-shellrcDATA \
	install-strip install-xdg_appsDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall \
	uninstall-akregatorincludeHEADERS uninstall-am \
	uninstall-binPROGRAMS uninstall-kde_kcfgDATA \
	uninstall-kde_moduleLTLIBRARIES uninstall-kde_servicetypesDATA \
	uninstall-kdelnkDATA uninstall-libLTLIBRARIES uninstall-local \
	uninstall-partdesktopDATA uninstall-partrcDATA \
	uninstall-shellrcDATA uninstall-xdg_appsDATA


messages: rc.cpp
	$(EXTRACTRC) `find . -name "*.rc" -o -name "*.ui" -o -name "*.kcfg"` >> rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/akregator.pot

#>- mainwindow.lo: akregatorconfig.h
#>+ 1
mainwindow.lo: mainwindow.moc  akregatorconfig.h
#>- akregator_part.lo: akregatorconfig.h
#>+ 1
akregator_part.lo: akregator_part.moc  akregatorconfig.h
#>- akregator_view.lo: akregatorconfig.h
#>+ 1
akregator_view.lo: akregator_view.moc  akregatorconfig.h
akregatorconfig.lo: akregatorconfig.h
#>- articlelistview.lo: akregatorconfig.h
#>+ 1
articlelistview.lo: articlelistview.moc  akregatorconfig.h
#>- articleviewer.lo: akregatorconfig.h
#>+ 1
articleviewer.lo: articleviewer.moc  akregatorconfig.h
#>- feed.lo: akregatorconfig.h
#>+ 1
feed.lo: feed.moc  akregatorconfig.h
#>- fetchqueue.lo: akregatorconfig.h
#>+ 1
fetchqueue.lo: fetchqueue.moc  akregatorconfig.h
#>- trayicon.lo: akregatorconfig.h
#>+ 1
trayicon.lo: trayicon.moc  akregatorconfig.h
#>- viewer.lo: akregatorconfig.h
#>+ 1
viewer.lo: viewer.moc  akregatorconfig.h
#>- searchbar.lo: akregatorconfig.h
#>+ 1
searchbar.lo: searchbar.moc  akregatorconfig.h
apidox-am-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$DOXDATA" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	test -d $(top_builddir)/apidocs || \
		( cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		--no-recurse $(abs_top_srcdir) . ) ; \
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--recurse --no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir $(subdir)

apidox-am-toplevel-yes:
	@if test \! -d "$(top_srcdir)/doc/common/" && test -z "$$ADMIN" ; then \
		export DOXDATA=$(kde_libs_htmldir)/en/common ; \
	fi ; \
	abs_top_srcdir=`cd $(top_srcdir) && pwd` ;\
	cd $(top_builddir) && sh $$abs_top_srcdir/admin/doxygen.sh \
		--no-modulename --installdir=$(kde_libs_htmldir)/en \
		$$abs_top_srcdir

apidox-am-no:

apidox-am-toplevel-no:

apidox:
	@if test "$(subdir)" != "."; then \
		$(MAKE) apidox-am-@KDE_HAS_DOXYGEN@ ;\
	else \
		$(MAKE) apidox-am-toplevel-@KDE_HAS_DOXYGEN@ ;\
	fi

install-data-local: install-apidox

install-apidox:
	@if test "$(subdir)" != "."; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html ; \
		if test -f $(top_builddir)/apidocs/$(subdir)/$(subdir).tag; then \
		echo $(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/$(subdir).tag $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi; \
		if test -d $(top_builddir)/apidocs/$(subdir)/html; then \
			list=`ls $(top_builddir)/apidocs/$(subdir)/html`; \
			echo "installing $(top_builddir)/apidocs/$(subdir)/html" ;\
			for file in $$list; do \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$(subdir)/html/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir)/html; \
		done; \
		fi; \
	else\
		if test -d $(top_builddir)/apidocs; then \
		$(mkinstalldirs) $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs ;\
		list=`cd $(top_builddir)/apidocs && ls -1`; \
		echo "installing $(top_builddir)/apidocs/$$file" ;\
		echo "target directory $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs" ; \
		for file in $$list; do \
			if test -f $(top_builddir)/apidocs/$$file; then \
				$(INSTALL_DATA) $(top_builddir)/apidocs/$$file $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
			fi; \
		done ; fi; \
	fi

uninstall-local: uninstall-apidox

uninstall-apidox:
	@if test "$(subdir)" != "."; then \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs/$(subdir); \
		fi \
	else \
		if test -d $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; then \
			rm -rf $(DESTDIR)$(kde_htmldir)/en/$(PACKAGE)-apidocs; \
		fi \
	fi

install-apidox-recurse: install-apidox
	@set fnord $(MAKEFLAGS); amf=$$2; if test -n '$(SUBDIRS)'; then \
	    list='$(SUBDIRS)'; \
	    for subdir in $$list; do \
		if grep '^include .*Doxyfile.am' $(srcdir)/$$subdir/Makefile.am > /dev/null ; then \
		echo "Installing apidox from $$subdir"; \
		if test "$$subdir" != "."; then \
			(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) GENERATE_FLAG=no install-apidox-recurse) || exit 1; \
		fi ; fi ;\
	    done; \
	fi

.PHONY: apidox-am-yes apidox-am-no install-data-local install-apidox install-apidox uninstall-local uninstall-apidox uninstall-apidox apidox apidox-am-toplevel-no apidox-am-toplevel-yes

# Local Variables:
# mode: makefile
# End:
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 13
akregator_partiface.kidl: $(srcdir)/akregator_partiface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/akregator_partiface.h > akregator_partiface.kidl || ( rm -f akregator_partiface.kidl ; false )
akregator_partiface_skel.cpp: akregator_partiface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub akregator_partiface.kidl
kspeechsink.kidl: $(kde_includes)/kspeechsink.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(kde_includes)/kspeechsink.h > kspeechsink.kidl || ( rm -f kspeechsink.kidl ; false )
kspeechsink_skel.cpp: kspeechsink.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kspeechsink.kidl
kspeech.kidl: $(kde_includes)/kspeech.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(kde_includes)/kspeech.h > kspeech.kidl || ( rm -f kspeech.kidl ; false )
kspeech_stub.h: kspeech.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-skel kspeech.kidl

#>+ 3
trayicon.moc: $(srcdir)/trayicon.h
	$(MOC) $(srcdir)/trayicon.h -o trayicon.moc

#>+ 2
mocs: trayicon.moc

#>+ 3
pageviewer.moc: $(srcdir)/pageviewer.h
	$(MOC) $(srcdir)/pageviewer.h -o pageviewer.moc

#>+ 2
mocs: pageviewer.moc

#>+ 3
akregator_run.moc: $(srcdir)/akregator_run.h
	$(MOC) $(srcdir)/akregator_run.h -o akregator_run.moc

#>+ 2
mocs: akregator_run.moc

#>+ 3
viewer.moc: $(srcdir)/viewer.h
	$(MOC) $(srcdir)/viewer.h -o viewer.moc

#>+ 2
mocs: viewer.moc

#>+ 3
articlelistview.moc: $(srcdir)/articlelistview.h
	$(MOC) $(srcdir)/articlelistview.h -o articlelistview.moc

#>+ 2
mocs: articlelistview.moc

#>+ 3
actionmanagerimpl.moc: $(srcdir)/actionmanagerimpl.h
	$(MOC) $(srcdir)/actionmanagerimpl.h -o actionmanagerimpl.moc

#>+ 2
mocs: actionmanagerimpl.moc

#>+ 3
listtabwidget.moc: $(srcdir)/listtabwidget.h
	$(MOC) $(srcdir)/listtabwidget.h -o listtabwidget.moc

#>+ 2
mocs: listtabwidget.moc

#>+ 3
settings_advanced.moc: $(srcdir)/settings_advanced.h
	$(MOC) $(srcdir)/settings_advanced.h -o settings_advanced.moc

#>+ 2
mocs: settings_advanced.moc

#>+ 3
articleviewer.moc: $(srcdir)/articleviewer.h
	$(MOC) $(srcdir)/articleviewer.h -o articleviewer.moc

#>+ 2
mocs: articleviewer.moc

#>+ 3
tagaction.moc: $(srcdir)/tagaction.h
	$(MOC) $(srcdir)/tagaction.h -o tagaction.moc

#>+ 2
mocs: tagaction.moc

#>+ 3
nodelist.moc: $(srcdir)/nodelist.h
	$(MOC) $(srcdir)/nodelist.h -o nodelist.moc

#>+ 2
mocs: nodelist.moc

#>+ 3
propertiesdialog.moc: $(srcdir)/propertiesdialog.h
	$(MOC) $(srcdir)/propertiesdialog.h -o propertiesdialog.moc

#>+ 2
mocs: propertiesdialog.moc

#>+ 3
mainwindow.moc: $(srcdir)/mainwindow.h
	$(MOC) $(srcdir)/mainwindow.h -o mainwindow.moc

#>+ 2
mocs: mainwindow.moc

#>+ 3
feedlistview.moc: $(srcdir)/feedlistview.h
	$(MOC) $(srcdir)/feedlistview.h -o feedlistview.moc

#>+ 2
mocs: feedlistview.moc

#>+ 3
notificationmanager.moc: $(srcdir)/notificationmanager.h
	$(MOC) $(srcdir)/notificationmanager.h -o notificationmanager.moc

#>+ 2
mocs: notificationmanager.moc

#>+ 3
akregator_view.moc: $(srcdir)/akregator_view.h
	$(MOC) $(srcdir)/akregator_view.h -o akregator_view.moc

#>+ 2
mocs: akregator_view.moc

#>+ 3
storagedummyimpl.moc: $(srcdir)/storagedummyimpl.h
	$(MOC) $(srcdir)/storagedummyimpl.h -o storagedummyimpl.moc

#>+ 2
mocs: storagedummyimpl.moc

#>+ 3
fetchqueue.moc: $(srcdir)/fetchqueue.h
	$(MOC) $(srcdir)/fetchqueue.h -o fetchqueue.moc

#>+ 2
mocs: fetchqueue.moc

#>+ 3
feediconmanager.moc: $(srcdir)/feediconmanager.h
	$(MOC) $(srcdir)/feediconmanager.h -o feediconmanager.moc

#>+ 2
mocs: feediconmanager.moc

#>+ 3
configdialog.moc: $(srcdir)/configdialog.h
	$(MOC) $(srcdir)/configdialog.h -o configdialog.moc

#>+ 2
mocs: configdialog.moc

#>+ 3
frame.moc: $(srcdir)/frame.h
	$(MOC) $(srcdir)/frame.h -o frame.moc

#>+ 2
mocs: frame.moc

#>+ 3
folder.moc: $(srcdir)/folder.h
	$(MOC) $(srcdir)/folder.h -o folder.moc

#>+ 2
mocs: folder.moc

#>+ 3
feedlist.moc: $(srcdir)/feedlist.h
	$(MOC) $(srcdir)/feedlist.h -o feedlist.moc

#>+ 2
mocs: feedlist.moc

#>+ 3
searchbar.moc: $(srcdir)/searchbar.h
	$(MOC) $(srcdir)/searchbar.h -o searchbar.moc

#>+ 2
mocs: searchbar.moc

#>+ 3
tagpropertiesdialog.moc: $(srcdir)/tagpropertiesdialog.h
	$(MOC) $(srcdir)/tagpropertiesdialog.h -o tagpropertiesdialog.moc

#>+ 2
mocs: tagpropertiesdialog.moc

#>+ 3
akregator_part.moc: $(srcdir)/akregator_part.h
	$(MOC) $(srcdir)/akregator_part.h -o akregator_part.moc

#>+ 2
mocs: akregator_part.moc

#>+ 3
progressmanager.moc: $(srcdir)/progressmanager.h
	$(MOC) $(srcdir)/progressmanager.h -o progressmanager.moc

#>+ 2
mocs: progressmanager.moc

#>+ 3
treenode.moc: $(srcdir)/treenode.h
	$(MOC) $(srcdir)/treenode.h -o treenode.moc

#>+ 2
mocs: treenode.moc

#>+ 3
tagset.moc: $(srcdir)/tagset.h
	$(MOC) $(srcdir)/tagset.h -o tagset.moc

#>+ 2
mocs: tagset.moc

#>+ 3
feed.moc: $(srcdir)/feed.h
	$(MOC) $(srcdir)/feed.h -o feed.moc

#>+ 2
mocs: feed.moc

#>+ 3
tagnodelist.moc: $(srcdir)/tagnodelist.h
	$(MOC) $(srcdir)/tagnodelist.h -o tagnodelist.moc

#>+ 2
mocs: tagnodelist.moc

#>+ 3
simplenodeselector.moc: $(srcdir)/simplenodeselector.h
	$(MOC) $(srcdir)/simplenodeselector.h -o simplenodeselector.moc

#>+ 2
mocs: simplenodeselector.moc

#>+ 3
tagnode.moc: $(srcdir)/tagnode.h
	$(MOC) $(srcdir)/tagnode.h -o tagnode.moc

#>+ 2
mocs: tagnode.moc

#>+ 3
tabwidget.moc: $(srcdir)/tabwidget.h
	$(MOC) $(srcdir)/tabwidget.h -o tabwidget.moc

#>+ 2
mocs: tabwidget.moc

#>+ 3
speechclient.moc: $(srcdir)/speechclient.h
	$(MOC) $(srcdir)/speechclient.h -o speechclient.moc

#>+ 2
mocs: speechclient.moc

#>+ 3
addfeeddialog.moc: $(srcdir)/addfeeddialog.h
	$(MOC) $(srcdir)/addfeeddialog.h -o addfeeddialog.moc

#>+ 2
mocs: addfeeddialog.moc

#>+ 5
feediconmanager.kidl: $(srcdir)/feediconmanager.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/feediconmanager.h > feediconmanager.kidl || ( rm -f feediconmanager.kidl ; false )
feediconmanager_skel.cpp: feediconmanager.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub feediconmanager.kidl

#>+ 3
clean-metasources:
	-rm -f  trayicon.moc pageviewer.moc akregator_run.moc viewer.moc articlelistview.moc actionmanagerimpl.moc listtabwidget.moc settings_advanced.moc articleviewer.moc tagaction.moc nodelist.moc propertiesdialog.moc mainwindow.moc feedlistview.moc notificationmanager.moc akregator_view.moc storagedummyimpl.moc fetchqueue.moc feediconmanager.moc configdialog.moc frame.moc folder.moc feedlist.moc searchbar.moc tagpropertiesdialog.moc akregator_part.moc progressmanager.moc treenode.moc tagset.moc feed.moc tagnodelist.moc simplenodeselector.moc tagnode.moc tabwidget.moc speechclient.moc addfeeddialog.moc

#>+ 2
KDE_DIST=hi64-app-akregator.png progressmanager.h akregator_plugin.desktop akregatorconfig.kcfgc actionmanager.h tagfolderitem.h folderitem.h eventsrc akregator_shell.rc shared.h feedlistview.h hi48-app-akregator.png simplenodeselector.h storagedummyimpl.h articleviewer.h folder.h akregator_view.h tagpropertieswidgetbase.ui addfeeddialog.h hi16-app-akregator.png settings_browser.ui notificationmanager.h hi128-app-akregator.png feed.protocol speechclient.h treenodevisitor.h propertieswidgetbase.ui akregator_partiface.h settings_archive.ui kernel.h articlelistview.h fetchqueue.h articleviewer.rc akregator_run.h akregator_part.desktop tagnodeitem.h viewer.h tagnode.h hisc-app-akregator.svgz treenodeitem.h actionmanagerimpl.h dragobjects.h Makefile.in akregator_part.h hi22-app-akregator.png articlefilter.h pageviewer.rc pluginmanager.h listtabwidget.h akregator.kcfg propertiesdialog.h tagpropertiesdialog.h trayicon.h feediconmanager.h settings_appearance.ui treenode.h nodelist.h mainwindow.h tagaction.h frame.h tabwidget.h settings_advancedbase.ui settings_advanced.h tag.h feeditem.h akregator_part.rc kcursorsaver.h feedlist.h searchbar.h pageviewer.h hi32-app-akregator.png configdialog.h feedstoragedummyimpl.h tagfolder.h aboutdata.h feed.h cr16-app-akregator_empty.png storagefactorydummyimpl.h utils.h settings_general.ui addfeedwidgetbase.ui akregator.desktop tagset.h article.h tagnodelist.h akregator_options.h Makefile.am 

#>+ 7
clean-idl:
	-rm -f \
	akregator_partiface_skel.cpp akregator_partiface_skel.h akregator_partiface.kidl \
	kspeechsink_skel.cpp kspeechsink_skel.h kspeechsink.kidl \
	kspeech_stub.cpp kspeech_stub.h kspeech.kidl \
	feediconmanager_skel.cpp feediconmanager_skel.h feediconmanager.kidl 

#>+ 11
clean-ui:
	-rm -f \
	addfeedwidgetbase.cpp addfeedwidgetbase.h addfeedwidgetbase.moc \
	propertieswidgetbase.cpp propertieswidgetbase.h propertieswidgetbase.moc \
	settings_appearance.cpp settings_appearance.h settings_appearance.moc \
	settings_general.cpp settings_general.h settings_general.moc \
	settings_archive.cpp settings_archive.h settings_archive.moc \
	settings_browser.cpp settings_browser.h settings_browser.moc \
	settings_advancedbase.cpp settings_advancedbase.h settings_advancedbase.moc \
	tagpropertieswidgetbase.cpp tagpropertieswidgetbase.h tagpropertieswidgetbase.moc 

#>+ 4
clean-kcfg:
	-rm -f \
	akregatorconfig.cpp akregatorconfig.h 

#>+ 2
docs-am:

#>+ 28
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-akregator.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/akregator.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/apps
	$(INSTALL_DATA) $(srcdir)/cr16-app-akregator_empty.png $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/apps/akregator_empty.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-akregator.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/akregator.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-akregator.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/akregator.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-akregator.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/akregator.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-akregator.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/akregator.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps
	$(INSTALL_DATA) $(srcdir)/hisc-app-akregator.svgz $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps/akregator.svgz
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps
	$(INSTALL_DATA) $(srcdir)/hi128-app-akregator.png $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/akregator.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/akregator.png
	-rm -f $(DESTDIR)$(kde_icondir)/crystalsvg/16x16/apps/akregator_empty.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/akregator.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/akregator.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/akregator.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/akregator.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/scalable/apps/akregator.svgz
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/akregator.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  akregator/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  akregator/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit akregator/src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in $(akregatorinclude_HEADERS); do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libakregatorpart_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/searchbar.cpp  akregatorconfig.h $(srcdir)/akregator_run.cpp $(srcdir)/articlelistview.cpp  akregatorconfig.h $(srcdir)/actionmanager.cpp $(srcdir)/actionmanagerimpl.cpp $(srcdir)/frame.cpp $(srcdir)/viewer.cpp  akregatorconfig.h $(srcdir)/articleviewer.cpp  akregatorconfig.h $(srcdir)/addfeeddialog.cpp $(srcdir)/propertiesdialog.cpp $(srcdir)/pageviewer.cpp $(srcdir)/tabwidget.cpp $(srcdir)/feedlistview.cpp $(srcdir)/treenodeitem.cpp $(srcdir)/folderitem.cpp $(srcdir)/feeditem.cpp $(srcdir)/progressmanager.cpp $(srcdir)/kernel.cpp $(srcdir)/listtabwidget.cpp $(srcdir)/tagnodeitem.cpp $(srcdir)/configdialog.cpp $(srcdir)/settings_advanced.cpp $(srcdir)/akregator_part.cpp  akregatorconfig.h $(srcdir)/akregator_view.cpp  akregatorconfig.h $(srcdir)/notificationmanager.cpp $(srcdir)/tagaction.cpp $(srcdir)/tagpropertiesdialog.cpp $(srcdir)/tagfolderitem.cpp $(srcdir)/speechclient.cpp akregator_partiface_skel.cpp kspeechsink_skel.cpp kspeech_stub.cpp addfeedwidgetbase.cpp propertieswidgetbase.cpp settings_appearance.cpp settings_general.cpp settings_archive.cpp settings_browser.cpp settings_advancedbase.cpp tagpropertieswidgetbase.cpp  pageviewer.moc akregator_run.moc viewer.moc actionmanagerimpl.moc articlelistview.moc settings_appearance.moc listtabwidget.moc settings_advanced.moc articleviewer.moc tagaction.moc propertiesdialog.moc feedlistview.moc akregator_view.moc notificationmanager.moc configdialog.moc settings_general.moc frame.moc propertieswidgetbase.moc addfeedwidgetbase.moc settings_advancedbase.moc searchbar.moc akregator_part.moc tagpropertiesdialog.moc progressmanager.moc tagpropertieswidgetbase.moc tabwidget.moc settings_archive.moc speechclient.moc addfeeddialog.moc settings_browser.moc
	@echo 'creating libakregatorpart_la.all_cpp.cpp ...'; \
	rm -f libakregatorpart_la.all_cpp.files libakregatorpart_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libakregatorpart_la.all_cpp.final; \
	for file in searchbar.cpp akregator_run.cpp articlelistview.cpp actionmanager.cpp actionmanagerimpl.cpp frame.cpp viewer.cpp articleviewer.cpp addfeeddialog.cpp propertiesdialog.cpp pageviewer.cpp tabwidget.cpp feedlistview.cpp treenodeitem.cpp folderitem.cpp feeditem.cpp progressmanager.cpp kernel.cpp listtabwidget.cpp tagnodeitem.cpp configdialog.cpp settings_advanced.cpp akregator_part.cpp akregator_view.cpp notificationmanager.cpp tagaction.cpp tagpropertiesdialog.cpp tagfolderitem.cpp speechclient.cpp akregator_partiface_skel.cpp kspeechsink_skel.cpp kspeech_stub.cpp addfeedwidgetbase.cpp propertieswidgetbase.cpp settings_appearance.cpp settings_general.cpp settings_archive.cpp settings_browser.cpp settings_advancedbase.cpp tagpropertieswidgetbase.cpp ; do \
	  echo "#include \"$$file\"" >> libakregatorpart_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libakregatorpart_la.all_cpp.final; \
	done; \
	cat libakregatorpart_la.all_cpp.final libakregatorpart_la.all_cpp.files > libakregatorpart_la.all_cpp.cpp; \
	rm -f libakregatorpart_la.all_cpp.final libakregatorpart_la.all_cpp.files

#>+ 11
libakregatorprivate_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/articlefilter.cpp $(srcdir)/aboutdata.cpp $(srcdir)/trayicon.cpp  akregatorconfig.h $(srcdir)/article.cpp $(srcdir)/feed.cpp  akregatorconfig.h $(srcdir)/treenode.cpp $(srcdir)/treenodevisitor.cpp $(srcdir)/tagnode.cpp $(srcdir)/folder.cpp $(srcdir)/tagfolder.cpp $(srcdir)/nodelist.cpp $(srcdir)/feedlist.cpp $(srcdir)/tagnodelist.cpp $(srcdir)/fetchqueue.cpp  akregatorconfig.h $(srcdir)/feediconmanager.cpp $(srcdir)/articleinterceptor.cpp $(srcdir)/plugin.cpp $(srcdir)/pluginmanager.cpp $(srcdir)/storagefactoryregistry.cpp $(srcdir)/storage.cpp $(srcdir)/tag.cpp $(srcdir)/tagset.cpp $(srcdir)/storagedummyimpl.cpp $(srcdir)/storagefactorydummyimpl.cpp $(srcdir)/simplenodeselector.cpp $(srcdir)/feedstoragedummyimpl.cpp $(srcdir)/dragobjects.cpp $(srcdir)/utils.cpp feediconmanager_skel.cpp akregatorconfig.cpp  akregatorconfig.h  trayicon.moc nodelist.moc storagedummyimpl.moc fetchqueue.moc feediconmanager.moc folder.moc feedlist.moc treenode.moc feed.moc tagset.moc simplenodeselector.moc tagnodelist.moc tagnode.moc
	@echo 'creating libakregatorprivate_la.all_cpp.cpp ...'; \
	rm -f libakregatorprivate_la.all_cpp.files libakregatorprivate_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libakregatorprivate_la.all_cpp.final; \
	for file in articlefilter.cpp aboutdata.cpp trayicon.cpp article.cpp feed.cpp treenode.cpp treenodevisitor.cpp tagnode.cpp folder.cpp tagfolder.cpp nodelist.cpp feedlist.cpp tagnodelist.cpp fetchqueue.cpp feediconmanager.cpp articleinterceptor.cpp plugin.cpp pluginmanager.cpp storagefactoryregistry.cpp storage.cpp tag.cpp tagset.cpp storagedummyimpl.cpp storagefactorydummyimpl.cpp simplenodeselector.cpp feedstoragedummyimpl.cpp dragobjects.cpp utils.cpp feediconmanager_skel.cpp akregatorconfig.cpp ; do \
	  echo "#include \"$$file\"" >> libakregatorprivate_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libakregatorprivate_la.all_cpp.final; \
	done; \
	cat libakregatorprivate_la.all_cpp.final libakregatorprivate_la.all_cpp.files > libakregatorprivate_la.all_cpp.cpp; \
	rm -f libakregatorprivate_la.all_cpp.final libakregatorprivate_la.all_cpp.files

#>+ 11
akregator.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/mainwindow.cpp  akregatorconfig.h  mainwindow.moc
	@echo 'creating akregator.all_cpp.cpp ...'; \
	rm -f akregator.all_cpp.files akregator.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> akregator.all_cpp.final; \
	for file in main.cpp mainwindow.cpp ; do \
	  echo "#include \"$$file\"" >> akregator.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> akregator.all_cpp.final; \
	done; \
	cat akregator.all_cpp.final akregator.all_cpp.files > akregator.all_cpp.cpp; \
	rm -f akregator.all_cpp.final akregator.all_cpp.files

#>+ 3
clean-final:
	-rm -f libakregatorpart_la.all_cpp.cpp libakregatorprivate_la.all_cpp.cpp akregator.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libakregatorpart_la_OBJECTS="$(libakregatorpart_la_final_OBJECTS)" libakregatorprivate_la_OBJECTS="$(libakregatorprivate_la_final_OBJECTS)" akregator_OBJECTS="$(akregator_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libakregatorpart_la_OBJECTS="$(libakregatorpart_la_final_OBJECTS)" libakregatorprivate_la_OBJECTS="$(libakregatorprivate_la_final_OBJECTS)" akregator_OBJECTS="$(akregator_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libakregatorpart_la_OBJECTS="$(libakregatorpart_la_nofinal_OBJECTS)" libakregatorprivate_la_OBJECTS="$(libakregatorprivate_la_nofinal_OBJECTS)" akregator_OBJECTS="$(akregator_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libakregatorpart_la_OBJECTS="$(libakregatorpart_la_nofinal_OBJECTS)" libakregatorprivate_la_OBJECTS="$(libakregatorprivate_la_nofinal_OBJECTS)" akregator_OBJECTS="$(akregator_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 123
tagaction.o: tagaction.moc 
tabwidget.lo: tabwidget.moc 
akregator_part.o: akregator_part.moc 
articlelistview.o: articlelistview.moc 
$(srcdir)/notificationmanager.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/pageviewer.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/listtabwidget.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
addfeeddialog.o: addfeeddialog.moc 
$(srcdir)/treenodevisitor.cpp: akregatorconfig.h 
$(srcdir)/akregator_view.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
nmcheck-am: nmcheck
folder.lo: folder.moc 
kspeech_stub.cpp: kspeech_stub.h 
$(srcdir)/configdialog.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
articleviewer.o: articleviewer.moc 
$(srcdir)/tagfolder.cpp: akregatorconfig.h 
$(srcdir)/trayicon.cpp: akregatorconfig.h 
$(srcdir)/progressmanager.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
notificationmanager.o: notificationmanager.moc 
$(srcdir)/frame.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/feed.cpp: akregatorconfig.h 
$(srcdir)/viewer.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/tagfolderitem.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
propertiesdialog.lo: propertiesdialog.moc 
speechclient.o: speechclient.moc 
tagnode.lo: tagnode.moc 
feed.o: feed.moc 
frame.o: frame.moc 
$(srcdir)/tag.cpp: akregatorconfig.h 
feedlistview.o: feedlistview.moc 
$(srcdir)/plugin.cpp: akregatorconfig.h 
tagpropertiesdialog.o: tagpropertiesdialog.moc 
$(srcdir)/tagnodeitem.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/tagpropertiesdialog.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
simplenodeselector.lo: simplenodeselector.moc 
simplenodeselector.o: simplenodeselector.moc 
$(srcdir)/feediconmanager.cpp: akregatorconfig.h 
pageviewer.o: pageviewer.moc 
viewer.o: viewer.moc 
$(srcdir)/tagset.cpp: akregatorconfig.h 
$(srcdir)/nodelist.cpp: akregatorconfig.h 
nodelist.o: nodelist.moc 
tagset.o: tagset.moc 
$(srcdir)/addfeeddialog.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/feedstoragedummyimpl.cpp: akregatorconfig.h 
akregator_view.o: akregator_view.moc 
$(srcdir)/feedlistview.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
listtabwidget.lo: listtabwidget.moc 
progressmanager.o: progressmanager.moc 
configdialog.o: configdialog.moc 
pageviewer.lo: pageviewer.moc 
$(srcdir)/kernel.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/articleinterceptor.cpp: akregatorconfig.h 
trayicon.o: trayicon.moc 
tagnodelist.o: tagnodelist.moc 
feediconmanager.o: feediconmanager.moc 
$(srcdir)/folder.cpp: akregatorconfig.h 
settings_advanced.lo: settings_advanced.moc 
$(srcdir)/propertiesdialog.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
treenode.o: treenode.moc 
tagpropertiesdialog.lo: tagpropertiesdialog.moc 
$(srcdir)/feedlist.cpp: akregatorconfig.h 
storagedummyimpl.lo: storagedummyimpl.moc 
$(srcdir)/treenode.cpp: akregatorconfig.h 
listtabwidget.o: listtabwidget.moc 
$(srcdir)/feeditem.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
tabwidget.o: tabwidget.moc 
$(srcdir)/pluginmanager.cpp: akregatorconfig.h 
settings_advanced.o: settings_advanced.moc 
$(srcdir)/searchbar.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/articleviewer.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/articlelistview.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
actionmanagerimpl.o: actionmanagerimpl.moc 
treenode.lo: treenode.moc 
$(srcdir)/akregator_part.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/settings_advanced.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
progressmanager.lo: progressmanager.moc 
speechclient.lo: speechclient.moc 
$(srcdir)/actionmanager.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
tagaction.lo: tagaction.moc 
$(srcdir)/tagnodelist.cpp: akregatorconfig.h 
notificationmanager.lo: notificationmanager.moc 
tagnode.o: tagnode.moc 
$(srcdir)/folderitem.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
akregator_run.lo: akregator_run.moc 
feedlist.o: feedlist.moc 
actionmanagerimpl.lo: actionmanagerimpl.moc 
tagset.lo: tagset.moc 
storagedummyimpl.o: storagedummyimpl.moc 
$(srcdir)/tagaction.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/utils.cpp: akregatorconfig.h 
nodelist.lo: nodelist.moc 
$(srcdir)/storage.cpp: akregatorconfig.h 
feedlist.lo: feedlist.moc 
mainwindow.o: mainwindow.moc 
addfeeddialog.lo: addfeeddialog.moc 
$(srcdir)/storagefactorydummyimpl.cpp: akregatorconfig.h 
$(srcdir)/speechclient.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/tagnode.cpp: akregatorconfig.h 
folder.o: folder.moc 
$(srcdir)/dragobjects.cpp: akregatorconfig.h 
frame.lo: frame.moc 
tagnodelist.lo: tagnodelist.moc 
$(srcdir)/tabwidget.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
$(srcdir)/fetchqueue.cpp: akregatorconfig.h 
$(srcdir)/aboutdata.cpp: akregatorconfig.h 
$(srcdir)/treenodeitem.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
configdialog.lo: configdialog.moc 
$(srcdir)/article.cpp: akregatorconfig.h 
$(srcdir)/storagedummyimpl.cpp: akregatorconfig.h 
$(srcdir)/simplenodeselector.cpp: akregatorconfig.h 
akregator_run.o: akregator_run.moc 
propertiesdialog.o: propertiesdialog.moc 
nmcheck: 
$(srcdir)/storagefactoryregistry.cpp: akregatorconfig.h 
$(srcdir)/articlefilter.cpp: akregatorconfig.h 
$(srcdir)/actionmanagerimpl.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 
fetchqueue.o: fetchqueue.moc 
searchbar.o: searchbar.moc 
feediconmanager.lo: feediconmanager.moc 
feedlistview.lo: feedlistview.moc 
$(srcdir)/akregator_run.cpp: kspeech_stub.h addfeedwidgetbase.h propertieswidgetbase.h settings_appearance.h settings_general.h settings_archive.h settings_browser.h settings_advancedbase.h tagpropertieswidgetbase.h 

#>+ 126
settings_appearance.cpp: $(srcdir)/settings_appearance.ui settings_appearance.h settings_appearance.moc
	rm -f settings_appearance.cpp
	echo '#include <kdialog.h>' > settings_appearance.cpp
	echo '#include <klocale.h>' >> settings_appearance.cpp
	$(UIC) -tr ${UIC_TR} -i settings_appearance.h $(srcdir)/settings_appearance.ui > settings_appearance.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" settings_appearance.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_settings_appearance,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> settings_appearance.cpp ;\
	rm -f settings_appearance.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "settings_appearance.moc"' >> settings_appearance.cpp; else rm -f settings_appearance.cpp ; exit $$ret ; fi

settings_appearance.h: $(srcdir)/settings_appearance.ui
	rm -rf settings_appearance.h;
	$(UIC) $(srcdir)/settings_appearance.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> settings_appearance.h ;
settings_appearance.moc: settings_appearance.h
	$(MOC) settings_appearance.h -o settings_appearance.moc

settings_general.cpp: $(srcdir)/settings_general.ui settings_general.h settings_general.moc
	rm -f settings_general.cpp
	echo '#include <kdialog.h>' > settings_general.cpp
	echo '#include <klocale.h>' >> settings_general.cpp
	$(UIC) -tr ${UIC_TR} -i settings_general.h $(srcdir)/settings_general.ui > settings_general.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" settings_general.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_settings_general,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> settings_general.cpp ;\
	rm -f settings_general.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "settings_general.moc"' >> settings_general.cpp; else rm -f settings_general.cpp ; exit $$ret ; fi

settings_general.h: $(srcdir)/settings_general.ui
	rm -rf settings_general.h;
	$(UIC) $(srcdir)/settings_general.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> settings_general.h ;
settings_general.moc: settings_general.h
	$(MOC) settings_general.h -o settings_general.moc

settings_advancedbase.cpp: $(srcdir)/settings_advancedbase.ui settings_advancedbase.h settings_advancedbase.moc
	rm -f settings_advancedbase.cpp
	echo '#include <kdialog.h>' > settings_advancedbase.cpp
	echo '#include <klocale.h>' >> settings_advancedbase.cpp
	$(UIC) -tr ${UIC_TR} -i settings_advancedbase.h $(srcdir)/settings_advancedbase.ui > settings_advancedbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" settings_advancedbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_settings_advancedbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> settings_advancedbase.cpp ;\
	rm -f settings_advancedbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "settings_advancedbase.moc"' >> settings_advancedbase.cpp; else rm -f settings_advancedbase.cpp ; exit $$ret ; fi

settings_advancedbase.h: $(srcdir)/settings_advancedbase.ui
	rm -rf settings_advancedbase.h;
	$(UIC) $(srcdir)/settings_advancedbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> settings_advancedbase.h ;
settings_advancedbase.moc: settings_advancedbase.h
	$(MOC) settings_advancedbase.h -o settings_advancedbase.moc

addfeedwidgetbase.cpp: $(srcdir)/addfeedwidgetbase.ui addfeedwidgetbase.h addfeedwidgetbase.moc
	rm -f addfeedwidgetbase.cpp
	echo '#include <kdialog.h>' > addfeedwidgetbase.cpp
	echo '#include <klocale.h>' >> addfeedwidgetbase.cpp
	$(UIC) -tr ${UIC_TR} -i addfeedwidgetbase.h $(srcdir)/addfeedwidgetbase.ui > addfeedwidgetbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" addfeedwidgetbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_addfeedwidgetbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> addfeedwidgetbase.cpp ;\
	rm -f addfeedwidgetbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "addfeedwidgetbase.moc"' >> addfeedwidgetbase.cpp; else rm -f addfeedwidgetbase.cpp ; exit $$ret ; fi

addfeedwidgetbase.h: $(srcdir)/addfeedwidgetbase.ui
	rm -rf addfeedwidgetbase.h;
	$(UIC) $(srcdir)/addfeedwidgetbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> addfeedwidgetbase.h ;
addfeedwidgetbase.moc: addfeedwidgetbase.h
	$(MOC) addfeedwidgetbase.h -o addfeedwidgetbase.moc

propertieswidgetbase.cpp: $(srcdir)/propertieswidgetbase.ui propertieswidgetbase.h propertieswidgetbase.moc
	rm -f propertieswidgetbase.cpp
	echo '#include <kdialog.h>' > propertieswidgetbase.cpp
	echo '#include <klocale.h>' >> propertieswidgetbase.cpp
	$(UIC) -tr ${UIC_TR} -i propertieswidgetbase.h $(srcdir)/propertieswidgetbase.ui > propertieswidgetbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" propertieswidgetbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_propertieswidgetbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> propertieswidgetbase.cpp ;\
	rm -f propertieswidgetbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "propertieswidgetbase.moc"' >> propertieswidgetbase.cpp; else rm -f propertieswidgetbase.cpp ; exit $$ret ; fi

propertieswidgetbase.h: $(srcdir)/propertieswidgetbase.ui
	rm -rf propertieswidgetbase.h;
	$(UIC) $(srcdir)/propertieswidgetbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> propertieswidgetbase.h ;
propertieswidgetbase.moc: propertieswidgetbase.h
	$(MOC) propertieswidgetbase.h -o propertieswidgetbase.moc

settings_browser.cpp: $(srcdir)/settings_browser.ui settings_browser.h settings_browser.moc
	rm -f settings_browser.cpp
	echo '#include <kdialog.h>' > settings_browser.cpp
	echo '#include <klocale.h>' >> settings_browser.cpp
	$(UIC) -tr ${UIC_TR} -i settings_browser.h $(srcdir)/settings_browser.ui > settings_browser.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" settings_browser.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_settings_browser,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> settings_browser.cpp ;\
	rm -f settings_browser.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "settings_browser.moc"' >> settings_browser.cpp; else rm -f settings_browser.cpp ; exit $$ret ; fi

settings_browser.h: $(srcdir)/settings_browser.ui
	rm -rf settings_browser.h;
	$(UIC) $(srcdir)/settings_browser.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> settings_browser.h ;
settings_browser.moc: settings_browser.h
	$(MOC) settings_browser.h -o settings_browser.moc

akregatorconfig.cpp: akregatorconfig.h
akregatorconfig.h: $(srcdir)/akregator.kcfg $(srcdir)/akregatorconfig.kcfgc $(KCFG_DEPENDENCIES)
	$(KCONFIG_COMPILER) $(srcdir)/akregator.kcfg $(srcdir)/akregatorconfig.kcfgc; ret=$$?; \
	if test "$$ret" != 0; then rm -f akregatorconfig.h ; exit $$ret ;  fi


settings_archive.cpp: $(srcdir)/settings_archive.ui settings_archive.h settings_archive.moc
	rm -f settings_archive.cpp
	echo '#include <kdialog.h>' > settings_archive.cpp
	echo '#include <klocale.h>' >> settings_archive.cpp
	$(UIC) -tr ${UIC_TR} -i settings_archive.h $(srcdir)/settings_archive.ui > settings_archive.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" settings_archive.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_settings_archive,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> settings_archive.cpp ;\
	rm -f settings_archive.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "settings_archive.moc"' >> settings_archive.cpp; else rm -f settings_archive.cpp ; exit $$ret ; fi

settings_archive.h: $(srcdir)/settings_archive.ui
	rm -rf settings_archive.h;
	$(UIC) $(srcdir)/settings_archive.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> settings_archive.h ;
settings_archive.moc: settings_archive.h
	$(MOC) settings_archive.h -o settings_archive.moc

tagpropertieswidgetbase.cpp: $(srcdir)/tagpropertieswidgetbase.ui tagpropertieswidgetbase.h tagpropertieswidgetbase.moc
	rm -f tagpropertieswidgetbase.cpp
	echo '#include <kdialog.h>' > tagpropertieswidgetbase.cpp
	echo '#include <klocale.h>' >> tagpropertieswidgetbase.cpp
	$(UIC) -tr ${UIC_TR} -i tagpropertieswidgetbase.h $(srcdir)/tagpropertieswidgetbase.ui > tagpropertieswidgetbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" tagpropertieswidgetbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_tagpropertieswidgetbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> tagpropertieswidgetbase.cpp ;\
	rm -f tagpropertieswidgetbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "tagpropertieswidgetbase.moc"' >> tagpropertieswidgetbase.cpp; else rm -f tagpropertieswidgetbase.cpp ; exit $$ret ; fi

tagpropertieswidgetbase.h: $(srcdir)/tagpropertieswidgetbase.ui
	rm -rf tagpropertieswidgetbase.h;
	$(UIC) $(srcdir)/tagpropertieswidgetbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> tagpropertieswidgetbase.h ;
tagpropertieswidgetbase.moc: tagpropertieswidgetbase.h
	$(MOC) tagpropertieswidgetbase.h -o tagpropertieswidgetbase.moc
